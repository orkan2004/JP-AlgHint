{
  "id": "BFS_20250920_00001",
  "version": "1.0",
  "lang": "ja",
  "task_family": "bfs_shortest",
  "answer_type": "int",
  "task": "bfs_shortest",
  "statement_ja": "無向グラフが与えられる。s から t への最短距離（辺数）を出力せよ。到達不能なら -1。",
  "io_spec": {
    "input": "n m s t\\n(u v)×m（1-indexed, 無向）",
    "output": "最短距離または -1"
  },
  "instance": {
    "seed": 1,
    "template_id": "BFS_T1",
    "params": {
      "n": 16
    }
  },
  "tests": [
    {
      "in": "16 32 4 7\n6 12\n3 4\n4 9\n3 7\n12 13\n4 12\n5 10\n2 5\n2 11\n1 3\n7 10\n6 8\n7 13\n4 5\n5 6\n4 8\n5 12\n8 11\n9 10\n9 16\n2 4\n1 2\n8 14\n2 16\n4 7\n3 8\n9 15\n2 3\n2 9\n11 15\n1 16\n7 11\n",
      "out": "1\n"
    },
    {
      "in": "16 27 2 12\n3 4\n14 16\n8 9\n8 12\n1 3\n13 14\n7 16\n7 13\n4 5\n5 6\n3 6\n8 11\n1 2\n9 13\n10 14\n11 13\n7 12\n7 15\n3 5\n12 14\n8 10\n1 4\n9 15\n11 12\n2 6\n7 11\n7 8\n",
      "out": "-1\n"
    }
  ],
  "reference": {
    "py": "ref/py/bfs_shortest.py"
  },
  "hints": [
    {
      "level": 1,
      "text": "無重みグラフの最短路は BFS で求まる。"
    },
    {
      "level": 2,
      "text": "dist 配列を -1 で初期化し、dist[s]=0。未訪問のみキューに入れる。"
    },
    {
      "level": 3,
      "text": "隣接 to の距離は dist[v]+1。t に到達したら距離が答え。"
    }
  ],
  "distractors": [
    {
      "code": "VISIT_MARK_LATE",
      "desc": "訪問印を遅く付けて多重プッシュ"
    },
    {
      "code": "OFF_BY_ONE",
      "desc": "距離 +1 や初期値の扱いを誤る"
    },
    {
      "code": "INDEX_BASE_MISMATCH",
      "desc": "1-indexed/0-indexed を取り違え"
    }
  ],
  "witness": {
    "shortest_len_t1": 1,
    "shortest_len_t2": -1
  },
  "difficulty": {
    "score": 0.4,
    "basis": "BFS on unweighted graph"
  },
  "tags": [
    "graph",
    "simulation",
    "beginner"
  ],
  "license": "CC BY-SA 4.0 (texts) / MIT (code)"
}