{
  "id": "KNAP_20250920_00025",
  "version": "1.0",
  "lang": "ja",
  "task_family": "knapsack_01",
  "answer_type": "int",
  "task": "knapsack_01",
  "statement_ja": "重さ w_i と価値 v_i の品物から、容量 W を超えないように選んで価値合計を最大化せよ（各品物は高々1個）。",
  "io_spec": {
    "input": "n W\\n(w v)×n",
    "output": "最大価値（整数）"
  },
  "instance": {
    "seed": 25,
    "template_id": "KNAP_T1",
    "params": {
      "n": 21,
      "W": 174
    }
  },
  "tests": [
    {
      "in": "21 174\n8 94\n10 25\n3 89\n7 26\n29 56\n30 59\n22 68\n23 8\n14 81\n28 42\n21 86\n11 46\n16 44\n23 53\n15 69\n11 92\n15 3\n8 93\n30 7\n18 95\n11 21\n",
      "out": "917\n"
    },
    {
      "in": "22 174\n8 94\n10 25\n3 89\n7 26\n29 56\n30 59\n22 68\n23 8\n14 81\n28 42\n21 86\n11 46\n16 44\n23 53\n15 69\n11 92\n15 3\n8 93\n30 7\n18 95\n11 21\n104 197\n",
      "out": "917\n"
    }
  ],
  "reference": {
    "py": "ref/py/knap01.py"
  },
  "hints": [
    {
      "level": 1,
      "text": "0/1ナップサックは DP（容量方向）で解く。"
    },
    {
      "level": 2,
      "text": "dp[cap] を容量 cap の最大価値として、各品目を後ろ向きに更新。"
    },
    {
      "level": 3,
      "text": "復元は dp の差分から選択アイテムを逆順に辿る。"
    }
  ],
  "distractors": [
    {
      "code": "TAKE_MAX_VALUE_ONLY",
      "desc": "価値の大きい順に貪欲に取る誤り"
    },
    {
      "code": "WRONG_GREEDY_ORDER",
      "desc": "価値/重さ比のみの貪欲（0/1では最適保証なし）"
    },
    {
      "code": "OVERFLOW_EDGE_IGNORED",
      "desc": "容量境界の等号扱いを誤る"
    }
  ],
  "witness": {
    "opt_value_t1": 917,
    "chosen_items_t1": [
      0,
      1,
      2,
      3,
      6,
      8,
      10,
      11,
      13,
      14,
      15,
      17,
      19
    ],
    "opt_value_t2": 917,
    "chosen_items_t2": [
      0,
      1,
      2,
      3,
      6,
      8,
      10,
      11,
      13,
      14,
      15,
      17,
      19
    ]
  },
  "difficulty": {
    "score": 0.45,
    "basis": "O(nW) DP with reconstruction"
  },
  "tags": [
    "dp",
    "simulation",
    "intermediate"
  ],
  "license": "CC BY-SA 4.0 (texts) / MIT (code)"
}