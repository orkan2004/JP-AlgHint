{
  "id": "BFS_20250920_00005",
  "version": "1.0",
  "lang": "ja",
  "task_family": "bfs_shortest",
  "answer_type": "int",
  "task": "bfs_shortest",
  "statement_ja": "無向グラフが与えられる。s から t への最短距離（辺数）を出力せよ。到達不能なら -1。",
  "io_spec": {
    "input": "n m s t\\n(u v)×m（1-indexed, 無向）",
    "output": "最短距離または -1"
  },
  "instance": {
    "seed": 5,
    "template_id": "BFS_T1",
    "params": {
      "n": 19
    }
  },
  "tests": [
    {
      "in": "19 47 16 9\n6 15\n3 4\n4 6\n5 13\n4 15\n8 9\n1 6\n9 17\n2 5\n1 3\n8 15\n2 11\n11 17\n17 18\n1 18\n13 17\n15 17\n6 8\n4 5\n3 9\n5 6\n12 15\n3 12\n3 18\n5 9\n4 14\n8 11\n9 16\n8 14\n1 2\n1 11\n11 13\n11 19\n1 8\n13 18\n16 18\n4 7\n3 8\n4 16\n4 19\n3 17\n8 10\n1 13\n2 6\n1 16\n7 8\n7 14\n",
      "out": "1\n"
    },
    {
      "in": "19 35 9 18\n4 6\n4 12\n5 7\n5 13\n14 16\n3 13\n5 10\n8 9\n1 6\n17 18\n1 3\n10 15\n7 10\n6 8\n18 19\n4 5\n4 11\n14 15\n3 15\n5 12\n9 10\n1 2\n10 11\n11 16\n2 16\n1 14\n2 13\n6 13\n3 8\n5 14\n17 19\n1 4\n1 16\n2 15\n13 15\n",
      "out": "-1\n"
    }
  ],
  "reference": {
    "py": "ref/py/bfs_shortest.py"
  },
  "hints": [
    {
      "level": 1,
      "text": "無重みグラフの最短路は BFS で求まる。"
    },
    {
      "level": 2,
      "text": "dist 配列を -1 で初期化し、dist[s]=0。未訪問のみキューに入れる。"
    },
    {
      "level": 3,
      "text": "隣接 to の距離は dist[v]+1。t に到達したら距離が答え。"
    }
  ],
  "distractors": [
    {
      "code": "VISIT_MARK_LATE",
      "desc": "訪問印を遅く付けて多重プッシュ"
    },
    {
      "code": "OFF_BY_ONE",
      "desc": "距離 +1 や初期値の扱いを誤る"
    },
    {
      "code": "INDEX_BASE_MISMATCH",
      "desc": "1-indexed/0-indexed を取り違え"
    }
  ],
  "witness": {
    "shortest_len_t1": 1,
    "shortest_len_t2": -1
  },
  "difficulty": {
    "score": 0.4,
    "basis": "BFS on unweighted graph"
  },
  "tags": [
    "graph",
    "simulation",
    "beginner"
  ],
  "license": "CC BY-SA 4.0 (texts) / MIT (code)"
}